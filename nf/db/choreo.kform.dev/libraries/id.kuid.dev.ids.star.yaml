apiVersion: choreo.kform.dev/v1alpha1
kind: Library
metadata:
  annotations:
    api.choreo.kform.dev/origin: '{"kind":"File"}'
  creationTimestamp: "2024-10-07T11:30:29Z"
  managedFields:
  - apiVersion: choreo.kform.dev/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:api.choreo.kform.dev/origin: {}
      f:spec:
        .: {}
        f:code: {}
        f:type: {}
      f:status: {}
    manager: inputfileloader
    operation: Apply
    time: "2024-10-07T11:30:29Z"
  name: id.kuid.dev.ids.star
  resourceVersion: "0"
  uid: 8dd7cd66-39ed-4c5b-b723-0d2a8e8fa4a7
spec:
  code: "def getNodeID(partition, region, site, node):\n  return {\n    \"partition\":
    partition,\n    \"region\": region,\n    \"site\": site,\n    \"node\": node,\n
    \ }\n\ndef genNodeIDString(nodeID):\n  return nodeID[\"partition\"] + \".\" +
    nodeID[\"region\"] + \".\" + nodeID[\"site\"] + \".\" + nodeID[\"node\"]\n\ndef
    getClusterID(partition, region, site, cluster):\n  return {\n    \"partition\":
    partition,\n    \"region\": region,\n    \"site\": site,\n    \"cluster\": cluster,\n
    \ }\n\ndef genClusterIDString(clusterID):\n  return clusterID[\"partition\"] +
    \".\" + clusterID[\"region\"] + \".\" + clusterID[\"site\"] + \".\" + clusterID[\"cluster\"]\n\ndef
    getEndpointID(nodeID, port, endpoint, name):\n  return {\n    \"partition\": nodeID.get(\"partition\",
    \"\"),\n    \"region\": nodeID.get(\"region\", \"\"),\n    \"site\": nodeID.get(\"site\",
    \"\"),\n    \"node\": nodeID.get(\"node\", \"\"),\n    \"port\": str(int(port)),\n
    \   \"endpoint\": str(int(endpoint)),\n    \"name\": name,\n  }\n\ndef genEndpointIDString(epID):\n
    \ nodeIDstr = genNodeIDString(epID)\n\n  epIDstr = nodeIDstr + \".\" + str(int(epID.get(\"port\",
    0))) + \".\" + str(int(epID.get(\"endpoint\", 0)))\n  epShortName = epID.get(\"name\",
    \"\")\n  if epShortName == \"\" or epShortName == \"interface\":\n    return epIDstr
    \n  return epIDstr + \".\" + epShortName\n\ndef getEndpointKeys():\n  return {\n
    \   \"partition\": True,\n    \"region\": True,\n    \"site\": True,\n    \"node\":
    True,\n    \"port\": True,\n    \"endpoint\": True,\n    \"name\": True,\n  }\n\ndef
    getNodeKeys():\n  return {\n    \"partition\": True,\n    \"region\": True,\n
    \   \"site\": True,\n    \"node\": True,\n  }\n\ndef getClusterKeys():\n  return
    {\n    \"partition\": True,\n    \"region\": True,\n    \"site\": True,\n    \"cluster\":
    True,\n  }\n"
  type: starlark
status: {}
